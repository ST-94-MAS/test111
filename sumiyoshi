    /*開発疑似環境public Subnet用ALB-1*/
    const AlbSPublic1= new elbv2.ApplicationLoadBalancer(this, "AlbSPublic1", {
      vpc: props.vpc,
      desyncMitigationMode: elbv2.DesyncMitigationMode.DEFENSIVE,
      http2Enabled: true,
      idleTimeout: cdk.Duration.seconds(60),
      internetFacing: true,
      ipAddressType: elbv2.IpAddressType.IPV4,
      loadBalancerName: `${props.systemSPrefix}-${props.envSPrefix}-ALB-Public-1`,
      securityGroup: AlbSPublic1Sg,
      vpcSubnets: props.ingressPublicSubnets,
    });
   /*アクセスログの設定*/
    AlbSPublic1.logAccessLogs(AlbAccess, `alb/${props.systemSPrefix}-${props.envSPrefix}-ALB-Public-1`); /*バケット*/
    cdk.Tags.of(AlbSPublic1).add(
      "Name", 
      `${props.systemSPrefix}-${props.envSPrefix}-ALB-Public-1`
    );

上記コードにaddlistnerを使用してコードを追記して
// 開発疑似環境public Subnet用ALB-1 HTTPSリスナーの追加
const AlbLissPublic1Https = AlbSPublic1.addListener("AlbLissPublic1Https", {
  certificates: [certificateotpstb], // SSL証明書の追加
  defaultAction: elbv2.ListenerAction.forward([AlbTgPsotp]),
  open: true,
  port: 443,
  protocol: elbv2.ApplicationProtocol.HTTPS,
});

// タグの追加
cdk.Tags.of(AlbLissPublic1Https).add("Name",`${props.systemSPrefix}-${props.envSPrefix}-ALB-Lis-Public-1-Https`);

// HTTPSリスナールールの追加
new elbv2.ApplicationListenerRule(this, "LisRulePublic1Https1c", {
  listener: AlbLissPublic1Https,
  priority: 10,
  conditions: [elbv2.ListenerCondition.hostHeaders([`***.${props.systemSPrefix}-${props.envSPrefix}digital.co.jp`])],  // ホストヘッダーの条件指定
  action: elbv2.ListenerAction.forward([AlbTgPsotp]) // Smp-Dev-TG-Psotpに転送
});
