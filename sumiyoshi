    /*Ingress Public subnetアプリ処理受付用ALB*/
    const AlbAppProIpublic = new elbv2.ApplicationLoadBalancer(this, "ALBAppProIpublic", {
      vpc: props.vpc,
      desyncMitigationMode: elbv2.DesyncMitigationMode.DEFENSIVE,
      http2Enabled: true,
      idleTimeout: cdk.Duration.seconds(60),
      internetFacing: true,
      ipAddressType: elbv2.IpAddressType.IPV4,
      loadBalancerName: `${props.systemPrefix}-${props.envPrefix}-ALB-AppPro-Ipublic`,
      securityGroup: AlbAppProIpublicSg,
      vpcSubnets: props.ingressPublicSubnets,
    });
   /*アクセスログの設定*/
    AlbAppProIpublic.logAccessLogs(props.logAlbAccess, `alb/${props.systemPrefix}-${props.envPrefix}-ALB-AppPro-Ipublic`); /*バケット*/
    cdk.Tags.of(AlbAppProIpublic).add(
      "Name", 
      `${props.systemPrefix}-${props.envPrefix}-ALB-AppPro-Ipublic`
    );

上記コードにaddlistnerを使用してコードを追記して

 // アクセスログの設定
AlbAppProIpublic.logAccessLogs(props.logAlbAccess, `alb/${props.systemPrefix}-${props.envPrefix}-ALB-AppPro-Ipublic`);
cdk.Tags.of(AlbAppProIpublic).add("Name", `${props.systemPrefix}-${props.envPrefix}-ALB-AppPro-Ipublic`);

// HTTPSリスナーを直接追加
const AlbLisApppublicHttps = AlbAppProIpublic.addListener("AlbLisApppublicHttps", {
  certificates: [props.appsmp], // SSL証明書の追加
  defaultAction: elbv2.ListenerAction.forward([props.AlbTgSiarec]),
  open: true,
  port: 443,
  protocol: elbv2.ApplicationProtocol.HTTPS,
});
cdk.Tags.of(AlbLisApppublicHttps).add("Name", `${props.systemPrefix}-${props.envPrefix}-ALB-Lis-Appublic-Https`);

// リスナールールの追加
new elbv2.ApplicationListenerRule(this, "LisRuleAppublicHttps", {
  listener: AlbLisApppublicHttps,
  priority: 10,
  conditions: [elbv2.ListenerCondition.hostHeaders([`***.${props.systemPrefix}-${props.envPrefix}digital.co.jp`])],
  action: elbv2.ListenerAction.forward([props.AlbTgApprec]) // Smp-Dev-TG-Apprecに転送
});
