  */
  /*Ingress Public subnet用ALB*/
    const AlbShareIpublic = new elbv2.ApplicationLoadBalancer(this, "AlbShareIpublic", {
      vpc: props.vpc,
      desyncMitigationMode: elbv2.DesyncMitigationMode.DEFENSIVE,
      http2Enabled: true,
      idleTimeout: cdk.Duration.seconds(60),
      internetFacing: true,
      ipAddressType: elbv2.IpAddressType.IPV4,
      loadBalancerName: `${props.systemPrefix}-${props.envPrefix}-ALB-Share-Ipublic`,
      securityGroup: AlbShareIpublicSg,
      vpcSubnets: props.ingressPublicSubnets,
    });
   /*アクセスログの設定*/
    AlbShareIpublic.logAccessLogs(props.logAlbAccess, `alb/${props.systemPrefix}-${props.envPrefix}-ALB-Share-Ipublic`); /*バケット*/
    cdk.Tags.of(AlbShareIpublic).add(
      "Name", 
      `${props.systemPrefix}-${props.envPrefix}-ALB-Share-Ipublic`
    );

     /*Ingress Public subnet用ALB Httpsリスナー*/
    const AlbLisIpublicHttps = new elbv2.ApplicationListener(this, "AlbLisIpublicHttps ", {
      loadBalancer: AlbShareIpublic,
      certificates: [props.asvsmp],  // SSL証明書の追加
      defaultAction: elbv2.ListenerAction.forward([AlbTgCrestf]),
      open: true,
      port: 443,
      protocol: elbv2.ApplicationProtocol.HTTPS,
    });
    cdk.Tags.of(AlbLisIpublicHttps).add("Name",`${props.systemPrefix}-${props.envPrefix}-ALB-Lis-Ipublic-Https`);

      // HTTPSリスナールールの追加
      // リスナールール 1
    const myLisRuleIpublicHttps1c = new elbv2.ApplicationListenerRule(this, "LisRuleIpublicHttps1c",{
      listener:  AlbLisIpublicHttps,
      priority: 10,
      conditions: [elbv2.ListenerCondition.hostHeaders([`***.${props.systemPrefix}-${props.envPrefix}digital.co.jp`])],  // ホストヘッダーの条件指定
      action: elbv2.ListenerAction.forward([AlbTgCrestf]) // Smp-Dev-TG-Crestfに転送
    });

      // リスナールール 2
      // AlbLisIpublicHttps.addRules("${props.systemPrefix}${props.envPrefix}LisRuleIpublicHttps2c", {
      //   priority: 20,
      //   conditions: [elbv2.ListenerCondition.hostHeaders(['***.${props.systemPrefix}-${props.envPrefix}digital.co.jp'])],  // ホストヘッダーの条件指定
      //   actions: [elbv2.ListenerAction.forward([AlbTgSiarec])] // Smp-Dev-TG-Siarecに転送
      // });
    const myLisRuleIpublicHttps2c = new elbv2.ApplicationListenerRule(this, "LisRuleIpublicHttps2c",{
      listener:  AlbLisIpublicHttps,
      priority: 20,
      conditions: [elbv2.ListenerCondition.hostHeaders([`***.${props.systemPrefix}-${props.envPrefix}digital.co.jp`])],  // ホストヘッダーの条件指定
      action: elbv2.ListenerAction.forward([AlbTgSiarec]) // Smp-Dev-TG-Siarecに転送
    });  
