    /*顔認証専用内部ALB*/
    const AlbBioAuthPrivate= new elbv2.ApplicationLoadBalancer(this, "AlbBioAuthPrivate", {
      vpc: props.vpc,
      desyncMitigationMode: elbv2.DesyncMitigationMode.DEFENSIVE,
      http2Enabled: true,
      idleTimeout: cdk.Duration.seconds(60),
      internetFacing: true,
      ipAddressType: elbv2.IpAddressType.IPV4,
      loadBalancerName: `${props.systemPrefix}-${props.envPrefix}-ALB-BioAuth-Private`,
      securityGroup: AlbBioAuthPrivateSg,
      vpcSubnets: props.privateSubnets,
    });
   /*アクセスログの設定*/
    AlbBioAuthPrivate.logAccessLogs(props.logAlbAccess, `alb/${props.systemPrefix}-${props.envPrefix}-ALB-BioAuth-Private`); /*バケット*/
    cdk.Tags.of(AlbBioAuthPrivate).add(
      "Name", 
      `${props.systemPrefix}-${props.envPrefix}-ALB-BioAuth-Private`
    );

上記コードにaddlistnerを使用してコードを追記して

    // /*開発環境顔認証専用内部ALB Httpsリスナー*/
    // const AlbLisBioAutheHttps = new elbv2.ApplicationListener(this, "AlbLisBioAutheHttps ", {
    //   loadBalancer: AlbBioAuthPrivate,
    //   //certificates: [certificateasvsmp],  // SSL証明書の追加
    //   defaultAction: elbv2.ListenerAction.forward([AlbTgScareq]),
    //   open: true,
    //   port: 80,
    //   protocol: elbv2.ApplicationProtocol.HTTPS,
    // });
    // cdk.Tags.of(AlbLisBioAutheHttps).add("Name",`${props.systemPrefix}-${props.envPrefix}-ALB-Lis-BioAuth-Https`);

    // // HTTPSリスナールールの追加
    // // AlbLisBioAutheHttps.addRules("${props.systemPrefix}${props.envPrefix}LisRuleBioAuthHttps1c", {
    // //   priority: 10,
    // //   conditions: [elbv2.ListenerCondition.hostHeaders(['***.${props.systemPrefix}-${props.envPrefix}digital.co.jp'])],  // ホストヘッダーの条件指定
    // //   actions: [elbv2.ListenerAction.forward([AlbTgScareq])] // Smp-Dev-TG-Scareqに転送
    // // });
    
    // const myLisRuleBioAuthHttps1c = new elbv2.ApplicationListenerRule(this, "LisRuleBioAuthHttps1c",{
    //   listener:  AlbLisBioAutheHttps,
    //   priority: 10,
    //   conditions: [elbv2.ListenerCondition.hostHeaders([`***.${props.systemPrefix}-${props.envPrefix}digital.co.jp`])],  // ホストヘッダーの条件指定
    //   action: elbv2.ListenerAction.forward([AlbTgScareq]) // Smp-Dev-TG-Scareqに転送
    // });   
