    /*開発疑似環境public Subnet用ALB-3*/
    const AlbSPublic3= new elbv2.ApplicationLoadBalancer(this, "AlbSPublic3", {
      vpc: props.vpc,
      desyncMitigationMode: elbv2.DesyncMitigationMode.DEFENSIVE,
      http2Enabled: true,
      idleTimeout: cdk.Duration.seconds(60),
      internetFacing: true,
      ipAddressType: elbv2.IpAddressType.IPV4,
      loadBalancerName: `${props.systemSPrefix}-${props.envSPrefix}-ALB-Public-3`,
      securityGroup: AlbSPublic3Sg,
      vpcSubnets: props.ingressPublicSubnets,
    });
   /*アクセスログの設定*/
    AlbSPublic3.logAccessLogs(AlbAccess, `alb/${props.systemSPrefix}-${props.envSPrefix}-ALB-Public-3`); /*バケット*/
    cdk.Tags.of(AlbSPublic3).add(
      "Name", 
      `${props.systemSPrefix}-${props.envSPrefix}-ALB-Public-3`
    );

上記コードにaddlistnerを使用してコードを追記して
// ALBにHTTPSリスナーを直接追加
const AlbLisPublic3Https = AlbSPublic3.addListener("AlbLisPublic3Https", {
  certificates: [certificateresstb], // SSL証明書の追加
  defaultAction: elbv2.ListenerAction.forward([AlbTgPsresp]),
  open: true,
  port: 443,
  protocol: elbv2.ApplicationProtocol.HTTPS,
});

// リスナーにタグを追加
cdk.Tags.of(AlbLisPublic3Https).add("Name", `${props.systemSPrefix}-${props.envSPrefix}-ALB-Lis-Public-3-Https`);

// HTTPSリスナールールを追加
new elbv2.ApplicationListenerRule(this, "LisRulePublic3Https1c", {
  listener: AlbLisPublic3Https,
  priority: 10,
  conditions: [elbv2.ListenerCondition.hostHeaders([`***.${props.systemSPrefix}-${props.envSPrefix}digital.co.jp`])],
  action: elbv2.ListenerAction.forward([AlbTgPsresp]) // トラフィックをSmp-Dev-TG-Psfarに転送
});
