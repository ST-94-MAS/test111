    /*開発疑似環境public Subnet用ALB-2*/
    const AlbSPublic2= new elbv2.ApplicationLoadBalancer(this, "AlbSPublic2", {
      vpc: props.vpc,
      desyncMitigationMode: elbv2.DesyncMitigationMode.DEFENSIVE,
      http2Enabled: true,
      idleTimeout: cdk.Duration.seconds(60),
      internetFacing: true,
      ipAddressType: elbv2.IpAddressType.IPV4,
      loadBalancerName: `${props.systemSPrefix}-${props.envSPrefix}-ALB-Public-2`,
      securityGroup: AlbSPublic2Sg,
      vpcSubnets: props.ingressPublicSubnets,
    });
   /*アクセスログの設定*/
    AlbSPublic2.logAccessLogs(AlbAccess, `alb/${props.systemSPrefix}-${props.envSPrefix}-ALB-Public-2`); /*バケット*/
    cdk.Tags.of(AlbSPublic2).add(
      "Name", 
      `${props.systemSPrefix}-${props.envSPrefix}-ALB-Public-2`
    );

上記コードにaddlistnerを使用してコードを追記して
// 開発疑似環境public Subnet用ALB-2 HTTPSリスナーの追加
const AlbLisPublic2Https = AlbSPublic2.addListener("AlbLisPublic2Https", {
  certificates: [certificateasvstb], // SSL証明書の追加
  defaultAction: elbv2.ListenerAction.forward([AlbTgPsapps]),
  open: true,
  port: 443,
  protocol: elbv2.ApplicationProtocol.HTTPS,
});

// タグの追加
cdk.Tags.of(AlbLisPublic2Https).add("Name", `${props.systemSPrefix}-${props.envSPrefix}-ALB-Lis-Public-2-Https`);

// HTTPSリスナールールの追加
new elbv2.ApplicationListenerRule(this, "LisRulePublic2Https1c", {
  listener: AlbLisPublic2Https,
  priority: 10,
  conditions: [elbv2.ListenerCondition.hostHeaders([`***.${props.systemSPrefix}-${props.envSPrefix}digital.co.jp`])],
  action: elbv2.ListenerAction.forward([AlbTgPsapps]) // Smp-Dev-TG-Psappsに転送
});
