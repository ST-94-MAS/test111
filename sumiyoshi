    /*開発疑似環境Private Subnet用ALB*/
    const AlbShareSPrivate= new elbv2.ApplicationLoadBalancer(this, "AlbShareSPrivate", {
      vpc: props.vpc,
      desyncMitigationMode: elbv2.DesyncMitigationMode.DEFENSIVE,
      http2Enabled: true,
      idleTimeout: cdk.Duration.seconds(60),
      internetFacing: true,
      ipAddressType: elbv2.IpAddressType.IPV4,
      loadBalancerName: `${props.systemSPrefix}-${props.envSPrefix}-ALB-Share-Private`,
      securityGroup: AlbShareIpublicPrivateSg,
      vpcSubnets: props.privateSubnets,
    });
   /*アクセスログの設定*/
    AlbShareSPrivate.logAccessLogs(AlbAccess, `alb/${props.systemSPrefix}-${props.envSPrefix}-ALB-Share-Private`); /*バケット*/
    cdk.Tags.of(AlbShareSPrivate).add(
      "Name", 
      `${props.systemSPrefix}-${props.envSPrefix}-ALB-Share-Private`
    );

上記コードにaddlistnerを使用してコードを追記して
    // /*開発疑似環境Private Subnet用ALB Httpsリスナー*/
    // const AlbLisPrivateHttps = new elbv2.ApplicationListener(this, "AlbLisPrivateHttps ", {
    //   loadBalancer: AlbShareSPrivate,
    //   //certificates: [certificateresstb],  // SSL証明書の追加
    //   defaultAction: elbv2.ListenerAction.forward([AlbTgPsfar]),
    //   open: true,
    //   port: 80,
    //   protocol: elbv2.ApplicationProtocol.HTTPS,
    // });
    // cdk.Tags.of(AlbLisPrivateHttps).add("Name",`${props.systemSPrefix}-${props.envSPrefix}-ALB-Lis-Private-Https`);

    // // HTTPSリスナールールの追加
    //   // リスナールール 1
    // //   AlbLisPrivateHttps.addRules("${props.systemSPrefix}${props.envSPrefix}LisRulePrivateHttps1c", {
    // //   priority: 10,
    // //   conditions: [elbv2.ListenerCondition.hostHeaders(['***.${props.systemSPrefix}-${props.envSPrefix}digital.co.jp'])],  // ホストヘッダーの条件指定
    // //   actions: [elbv2.ListenerAction.forward([AlbTgPsfar])] // Smp-Dev-TG-Pssptに転送
    // // });
    
    // const myLisRuleStbPrivateHttps1c = new elbv2.ApplicationListenerRule(this, "LisRuleStbPrivateHttps1c",{
    //   listener:  AlbLisPrivateHttps,
    //   priority: 10,
    //   conditions: [elbv2.ListenerCondition.hostHeaders([`***.${props.systemPrefix}-${props.envPrefix}digital.co.jp`])],  // ホストヘッダーの条件指定
    //   action: elbv2.ListenerAction.forward([AlbTgPsfar]) // Smp-Dev-TG-Pssptに転送
    // });  

    //   // リスナールール 2
    // //   AlbLisPrivateHttps.addRules("${props.systemSPrefix}${props.envSPrefix}LisRulePrivateHttps1c", {
    // //   priority: 20,
    // //   conditions: [elbv2.ListenerCondition.hostHeaders(['***.${props.systemSPrefix}-${props.envSPrefix}digital.co.jp'])],  // ホストヘッダーの条件指定
    // //   actions: [elbv2.ListenerAction.forward([AlbTgPsspt])] // Smp-Dev-TG-Pssptに転送
    // // });
     
    // const myLisRuleStbPrivateHttps2c = new elbv2.ApplicationListenerRule(this, "LisRuleStbPrivateHttps2c",{
    //   listener:  AlbLisPrivateHttps,
    //   priority: 20,
    //   conditions: [elbv2.ListenerCondition.hostHeaders([`***.${props.systemPrefix}-${props.envPrefix}digital.co.jp`])],  // ホストヘッダーの条件指定
    //   action: elbv2.ListenerAction.forward([AlbTgPsspt]) // Smp-Dev-TG-Pssptに転送
    // }); 
